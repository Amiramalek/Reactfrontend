this.BX=this.BX||{};this.BX.Messenger=this.BX.Messenger||{};this.BX.Messenger.v2=this.BX.Messenger.v2||{};(function(e,s,t,a,o,i){"use strict";const r=e=>{const s=99;const t=`${s}+`;const a=/^\((?<currentCounter>\d+|\d+\+)\)\s(?<text>.*)/;const o=document.title.match(a);const i=e>s?t:e;if(o!=null&&o.groups.currentCounter){const s=Number.parseInt(o.groups.currentCounter,10);if(e!==s){const s=e>0?`(${i}) `:"";document.title=`${s}${o.groups.text}`}}else if(e>0){document.title=`(${i}) ${document.title}`}};var l=babelHelpers.classPrivateFieldLooseKey("instance");var n=babelHelpers.classPrivateFieldLooseKey("store");var c=babelHelpers.classPrivateFieldLooseKey("init");var b=babelHelpers.classPrivateFieldLooseKey("prepareChatCounters");var u=babelHelpers.classPrivateFieldLooseKey("subscribeToCountersChange");var v=babelHelpers.classPrivateFieldLooseKey("sendNotificationCounterChangeEvent");var d=babelHelpers.classPrivateFieldLooseKey("sendChatCounterChangeEvent");var h=babelHelpers.classPrivateFieldLooseKey("sendLinesCounterChangeEvent");var p=babelHelpers.classPrivateFieldLooseKey("onTotalCounterChange");class L{static getInstance(){if(!babelHelpers.classPrivateFieldLooseBase(this,l)[l]){babelHelpers.classPrivateFieldLooseBase(this,l)[l]=new this}return babelHelpers.classPrivateFieldLooseBase(this,l)[l]}constructor(){Object.defineProperty(this,p,{value:f});Object.defineProperty(this,h,{value:F});Object.defineProperty(this,d,{value:g});Object.defineProperty(this,v,{value:H});Object.defineProperty(this,u,{value:B});Object.defineProperty(this,b,{value:P});Object.defineProperty(this,c,{value:C});Object.defineProperty(this,n,{writable:true,value:void 0});babelHelpers.classPrivateFieldLooseBase(this,n)[n]=t.Core.getStore();const{counters:e}=t.Core.getApplicationData();o.Logger.warn("CounterManager: counters",e);babelHelpers.classPrivateFieldLooseBase(this,c)[c](e)}static init(){L.getInstance()}removeBrowserTitleCounter(){const e=/^(?<counterWithWhitespace>\(\d+\)\s).*/;const s=document.title.match(e);if(!(s!=null&&s.groups.counterWithWhitespace)){return}const t=s.groups.counterWithWhitespace;document.title=document.title.slice(t)}}function C(e){const s=babelHelpers.classPrivateFieldLooseBase(this,b)[b](e.CHAT,e.CHAT_UNREAD);babelHelpers.classPrivateFieldLooseBase(this,n)[n].dispatch("counters/setUnloadedChatCounters",s);babelHelpers.classPrivateFieldLooseBase(this,n)[n].dispatch("counters/setUnloadedLinesCounters",e.LINES);babelHelpers.classPrivateFieldLooseBase(this,n)[n].dispatch("counters/setUnloadedCopilotCounters",e.COPILOT);const t=babelHelpers.classPrivateFieldLooseBase(this,b)[b](e.COLLAB,e.COLLAB_UNREAD);babelHelpers.classPrivateFieldLooseBase(this,n)[n].dispatch("counters/setUnloadedCollabCounters",t);babelHelpers.classPrivateFieldLooseBase(this,n)[n].dispatch("counters/setCommentCounters",e.CHANNEL_COMMENT);babelHelpers.classPrivateFieldLooseBase(this,n)[n].dispatch("notifications/setCounter",e.TYPE.NOTIFY);babelHelpers.classPrivateFieldLooseBase(this,u)[u]();babelHelpers.classPrivateFieldLooseBase(this,d)[d](e.TYPE.CHAT);babelHelpers.classPrivateFieldLooseBase(this,v)[v](e.TYPE.NOTIFY);babelHelpers.classPrivateFieldLooseBase(this,h)[h](e.TYPE.LINES);babelHelpers.classPrivateFieldLooseBase(this,p)[p]()}function P(e,s){const t={...e};s.forEach((s=>{const a=Boolean(e[s]);if(a){return}t[s]=1}));return t}function B(){babelHelpers.classPrivateFieldLooseBase(this,n)[n].watch(E,(e=>{babelHelpers.classPrivateFieldLooseBase(this,v)[v](e);babelHelpers.classPrivateFieldLooseBase(this,p)[p]()}));babelHelpers.classPrivateFieldLooseBase(this,n)[n].watch(m,(e=>{babelHelpers.classPrivateFieldLooseBase(this,d)[d](e);babelHelpers.classPrivateFieldLooseBase(this,p)[p]()}));babelHelpers.classPrivateFieldLooseBase(this,n)[n].watch(y,(e=>{babelHelpers.classPrivateFieldLooseBase(this,h)[h](e);babelHelpers.classPrivateFieldLooseBase(this,p)[p]()}))}function H(e){const t=new s.BaseEvent({compatData:[e]});s.EventEmitter.emit(window,i.EventType.counter.onNotificationCounterChange,t)}function g(e){const t=new s.BaseEvent({compatData:[e]});s.EventEmitter.emit(window,i.EventType.counter.onChatCounterChange,t)}function F(e){const t="LINES";const a=new s.BaseEvent({compatData:[e,t]});s.EventEmitter.emit(window,i.EventType.counter.onLinesCounterChange,a)}function f(){const e=babelHelpers.classPrivateFieldLooseBase(this,n)[n].getters["notifications/getCounter"];const s=babelHelpers.classPrivateFieldLooseBase(this,n)[n].getters["counters/getTotalChatCounter"];const t=babelHelpers.classPrivateFieldLooseBase(this,n)[n].getters["counters/getTotalLinesCounter"];const o=e+s+t;if(a.DesktopManager.getInstance().isDesktopActive()){return}r(o)}Object.defineProperty(L,l,{writable:true,value:void 0});const E=(e,s)=>s["notifications/getCounter"];const m=(e,s)=>s["counters/getTotalChatCounter"];const y=(e,s)=>s["counters/getTotalLinesCounter"];e.CounterManager=L})(this.BX.Messenger.v2.Lib=this.BX.Messenger.v2.Lib||{},BX.Event,BX.Messenger.v2.Application,BX.Messenger.v2.Lib,BX.Messenger.v2.Lib,BX.Messenger.v2.Const);
//# sourceMappingURL=counter.bundle.map.js