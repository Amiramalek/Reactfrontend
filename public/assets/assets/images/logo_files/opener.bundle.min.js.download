this.BX=this.BX||{};this.BX.Messenger=this.BX.Messenger||{};this.BX.Messenger.v2=this.BX.Messenger.v2||{};(function(e,t,n,a,r,s,i,o,l,g,c,d,u){"use strict";const y={async openChat(e="",a=0){const r=e.toString();if(l.Utils.dialog.isLinesExternalId(r)){return this.openLines(r)}await g.MessengerSlider.getInstance().openSlider();const i={name:n.Layout.chat.name,entityId:r};if(a>0){i.contextId=a}await s.LayoutManager.getInstance().setLayout(i);t.EventEmitter.emit(n.EventType.layout.onOpenChat,{dialogId:r});return Promise.resolve()},async openChatWithBotContext(e,t){const n=new d.BotContextService;n.scheduleContextRequest(e,t);return this.openChat(e)},async forwardEntityToChat(e,a){const r=e.toString();await g.MessengerSlider.getInstance().openSlider();const i={name:n.Layout.chat.name,entityId:r};await s.LayoutManager.getInstance().setLayout(i);t.EventEmitter.emit(n.EventType.layout.onOpenChat,{dialogId:r});t.EventEmitter.emit(n.EventType.textarea.forwardEntity,{dialogId:e,entityConfig:a});return Promise.resolve()},async openLines(e=""){let t=e.toString();if(l.Utils.dialog.isLinesExternalId(t)){const e=new d.LinesService;t=await e.getDialogIdByUserCode(t)}await g.MessengerSlider.getInstance().openSlider();const a=c.FeatureManager.isFeatureAvailable(c.Feature.openLinesV2);return s.LayoutManager.getInstance().setLayout({name:a?n.Layout.openlinesV2.name:n.Layout.openlines.name,entityId:t})},async openCopilot(e="",t=0){const a=e.toString();await g.MessengerSlider.getInstance().openSlider();return s.LayoutManager.getInstance().setLayout({name:n.Layout.copilot.name,entityId:a,contextId:t})},async openCollab(e=""){const t=e.toString();await g.MessengerSlider.getInstance().openSlider();return s.LayoutManager.getInstance().setLayout({name:n.Layout.collab.name,entityId:t})},openHistory(e=""){if(l.Utils.dialog.isDialogId(e)){return this.openChat(e)}if(!p(e)){return Promise.reject()}const t=L(e);BX.SidePanel.Instance.open(t,{width:l.Utils.dialog.isLinesExternalId(e)?700:1e3,allowChangeHistory:false,allowChangeTitle:false,cacheable:false});return Promise.resolve()},async openNotifications(){await g.MessengerSlider.getInstance().openSlider();await s.LayoutManager.getInstance().setLayout({name:n.Layout.notification.name});t.EventEmitter.emit(n.EventType.layout.onOpenNotifications);return Promise.resolve()},async openRecentSearch(){await g.MessengerSlider.getInstance().openSlider();await s.LayoutManager.getInstance().setLayout({name:n.Layout.chat.name});t.EventEmitter.emit(n.EventType.recent.openSearch);return Promise.resolve()},async openSettings(e){i.Logger.warn("Slider: openSettings",e);await g.MessengerSlider.getInstance().openSlider();await s.LayoutManager.getInstance().setLayout({name:n.Layout.settings.name,entityId:e});return Promise.resolve()},openConference(e=""){i.Logger.warn("Slider: openConference",e);if(!l.Utils.conference.isValidCode(e)){return Promise.reject()}const t=l.Utils.conference.getUrlByCode(e);l.Utils.browser.openLink(t,l.Utils.conference.getWindowNameByCode(e));return Promise.resolve()},async openChatCreation(e,t={}){var a;i.Logger.warn("Slider: openChatCreation",e);u.CreateChatManager.getInstance().setPreselectedMembers((a=t.preselectedMembers)!=null?a:[]);await g.MessengerSlider.getInstance().openSlider();const r={name:n.Layout.createChat.name,entityId:e};return s.LayoutManager.getInstance().setLayout(r)},startVideoCall(e="",t=true){i.Logger.warn("Slider: onStartVideoCall",e,t);if(!l.Utils.dialog.isDialogId(e)){i.Logger.error("Slider: onStartVideoCall - dialogId is not correct",e);return false}a.CallManager.getInstance().startCall(e,t);return Promise.resolve()},startPhoneCall(e,t){i.Logger.warn("Slider: startPhoneCall",e,t);void o.PhoneManager.getInstance().startCall(e,t);return Promise.resolve()},startCallList(e,t){i.Logger.warn("Slider: startCallList",e,t);o.PhoneManager.getInstance().startCallList(e,t);return Promise.resolve()},openNewTab(e){if(r.DesktopApi.isChatTab()&&r.DesktopApi.isFeatureSupported(r.DesktopFeature.openNewTab.id)){r.DesktopApi.createImTab(`${e}&${n.GetParameter.desktopChatTabMode}=Y`)}else{l.Utils.browser.openLink(e)}}};const p=e=>l.Utils.dialog.isLinesHistoryId(e)||l.Utils.dialog.isLinesExternalId(e);const L=e=>{const t=new URLSearchParams({[n.GetParameter.openHistory]:e,[n.GetParameter.backgroundType]:"light"});return`/desktop_app/history.php?${t.toString()}`};e.Opener=y})(this.BX.Messenger.v2.Lib=this.BX.Messenger.v2.Lib||{},BX.Event,BX.Messenger.v2.Const,BX.Messenger.v2.Lib,BX.Messenger.v2.Lib,BX.Messenger.v2.Lib,BX.Messenger.v2.Lib,BX.Messenger.v2.Lib,BX.Messenger.v2.Lib,BX.Messenger.v2.Lib,BX.Messenger.v2.Lib,BX.Messenger.v2.Service,BX.Messenger.v2.Lib);
//# sourceMappingURL=opener.bundle.map.js